name: Tests

on: push

defaults:
  run:
    working-directory: .

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php: [7.3]
        stability: [prefer-stable]

    name: PHP version ${{ matrix.php }} - ${{ matrix.stability }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-composer-dependencies
        with:
          path: ~/.composer/cache/files
          key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Cache Node.js modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: dependencies-node-npm-${{ hashFiles('package-lock.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: none

      - name: Install dependencies
        run: |
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress
          npm install

      - name: Setup Laravel
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      - name: Build assets
        run: npm run dev

      - name: Run PHPUnit
        run: vendor/bin/phpunit --verbose
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_USERNAME: default

      - name: Run Jest
        run: npm run test -- --verbose
